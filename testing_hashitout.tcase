
                                                                    HASHITOUT Testing Plan
                                                                  --------------------------                                                                  
Test Cases:
----------------------------------------------------------------------------------------------------------------------------------------------------------------
1) The test case is defined as follows:

		A) Run `hashdeep -c <algo>` to get the <algo> digest for the file, add that digest to this file in a new set.

		B) Run testing version of hashitout to get <algo> digest.

		C) There will be two outputted digests from hashitout test. One is from inside the hash function, and
		   the other from main(). Add these two to this file, in the new set.

		D) Compare the sets to make sure the outputted digests/checksums are correct.

2) N/A

3) N/A
----------------------------------------------------------------------------------------------------------------------------------------------------------------


Test Case Reports:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Test Case #1: File - sage-7.6-Fedora_25-x86_64.tar.bz2.torrent				[PASSED]
------------
94e66453660f70645307ed3bda7c293e  --  From hashdeep for ./sage-7.6-Fedora_25-x86_64.tar.bz2.torrent

94e66453660f70645307ed3bda7c293e  --  From hashitout(inside of hio_md5() function) for ./sage-7.6-Fedora_25-x86_64.tar.bz2.torrent

94e66453660f70645307ed3bda7c293e  --  From hashitout(final hash calculated)  for ./sage-7.6-Fedora_25-x86_64.tar.bz2.torrent


Test Case #1: File - hashitout_063017-0311PM.tar.xz							[PASSED]
------------  ----
f2ec9a18cb004f11a26b3d90f3c0b740  --  From hashdeep for our file.

f2ec9a18cb004f11a26b3d90f3c0b740  --  From hashitout(inside of hio_md5().

f2ec9a18cb004f11a26b3d90f3c0b740  --  From hashitout(final hash calculated).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
